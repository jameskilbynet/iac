---
- name: Ubuntu Server Patching Playbook
  hosts: ubuntu_servers
  become: yes
  gather_facts: yes

  pre_tasks:
    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ backup_path }}"
        - "{{ log_path }}"

    - name: Check system uptime
      command: uptime
      register: system_uptime
      changed_when: false
      check_mode: no

    - name: Check available disk space
      shell: df / | tail -1 | awk '{print $4}'
      register: available_space
      changed_when: false
      check_mode: no

    - name: Verify minimum free space
      assert:
        that:
          - "available_space.stdout|int > min_free_space_mb*1024"
        msg: "Insufficient free space for patching"
      when: not ansible_check_mode

    - name: Backup current package list
      shell: dpkg --get-selections > "{{ backup_path }}/pkg_list_$(date +%Y%m%d_%H%M%S).txt"
      args:
        creates: "{{ backup_path }}/pkg_list_$(date +%Y%m%d_%H%M%S).txt"
      when: not ansible_check_mode

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: "{{ apt_cache_valid_time }}"
      register: apt_update
      timeout: "{{ apt_timeout }}"

    - name: Upgrade packages
      apt:
        upgrade: "{{ apt_upgrade_type }}"
        update_cache: no
      register: apt_upgrade
      timeout: "{{ apt_timeout }}"

    - name: Install security updates
      apt:
        upgrade: yes
        update_cache: no
        only_upgrade: yes
      when: security_updates_only|bool
      register: security_upgrade
      timeout: "{{ apt_timeout }}"

    - name: Remove unused dependencies
      apt:
        autoremove: yes
        autoclean: yes
      register: apt_clean

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot system if required
      reboot:
        msg: "Reboot required after system updates"
        connect_timeout: "{{ reboot_timeout }}"
        reboot_timeout: "{{ reboot_timeout }}"
        pre_reboot_delay: 5
        post_reboot_delay: 30
      when: reboot_required.stat.exists and not ansible_check_mode

  post_tasks:
    - name: Get system status after patching
      shell: |
        echo "Memory usage:" && free -h
        echo "Disk usage:" && df -h
        echo "Uptime:" && uptime
      register: system_status
      changed_when: false
      check_mode: no

    - name: Display patching results
      debug:
        msg: |
          Patching completed:
          - Packages updated: {{ apt_upgrade.changed }}
          - Security updates: {{ security_upgrade.changed if security_updates_only|bool else 'Not requested' }}
          - Cleanup performed: {{ apt_clean.changed }}
          - Reboot status: {{ reboot_required.stat.exists }}

  handlers:
    - name: Log patching results
      copy:
        content: |
          Patching completed at {{ ansible_date_time.iso8601 }}
          {{ system_status.stdout }}
        dest: "{{ log_path }}/patch_results_{{ ansible_date_time.date }}.log"
      listen: "log_results"
      when: not ansible_check_mode


  tags:
    - patching
    - security
